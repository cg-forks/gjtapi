package net.sourceforge.gjtapi.raw.remote.corba;

/**
* com/uforce/jtapi/generic/raw/remote/corba/_CorbaListenerStub.java
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from CorbaProvider.idl
* Thursday, November 16, 2000 1:10:55 o'clock PM EST
*/

public class _CorbaListenerStub extends org.omg.CORBA.portable.ObjectImpl implements CorbaListener {
  // Type-specific CORBA::Object operations
  private static String[] __ids = {
	"IDL:com/uforce/jtapi/generic/raw/remote/corba/CorbaListener:1.0"};
  // Constructors
  // NOTE:  If the default constructor is used, the
  //        object is useless until _set_delegate (...)
  //        is called.
  public _CorbaListenerStub ()
  {
	super ();
  }      
  public _CorbaListenerStub (org.omg.CORBA.portable.Delegate delegate)
  {
	super ();
	_set_delegate (delegate);
  }      
  public String[] _ids ()
  {
	return (String[])__ids.clone ();
  }      
  public void addressPrivateData (String address, org.omg.CORBA.Any data, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("addressPrivateData", false);
	   _out.write_string (address);
	   _out.write_any (data);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   addressPrivateData (address, data, cause);
	} finally {
		_releaseReply (_in);
	}
  } // addressPrivateData      
  public void callActive (int callId, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("callActive", false);
	   _out.write_long (callId);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   callActive (callId, cause);
	} finally {
		_releaseReply (_in);
	}
  } // callActive      
  public void callInvalid (int callId, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("callInvalid", false);
	   _out.write_long (callId);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   callInvalid (callId, cause);
	} finally {
		_releaseReply (_in);
	}
  } // callInvalid      
  public void callOverloadCeased (String address)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("callOverloadCeased", false);
	   _out.write_string (address);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   callOverloadCeased (address);
	} finally {
		_releaseReply (_in);
	}
  } // callOverloadCeased      
  public void callOverloadEncountered (String address)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("callOverloadEncountered", false);
	   _out.write_string (address);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   callOverloadEncountered (address);
	} finally {
		_releaseReply (_in);
	}
  } // callOverloadEncountered      
  public void callPrivateData (int callId, org.omg.CORBA.Any data, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("callPrivateData", false);
	   _out.write_long (callId);
	   _out.write_any (data);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   callPrivateData (callId, data, cause);
	} finally {
		_releaseReply (_in);
	}
  } // callPrivateData      
  public void connectionAddressAnalyse (int callId, String address, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("connectionAddressAnalyse", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   connectionAddressAnalyse (callId, address, cause);
	} finally {
		_releaseReply (_in);
	}
  } // connectionAddressAnalyse      
  public void connectionAddressCollect (int callId, String address, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("connectionAddressCollect", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   connectionAddressCollect (callId, address, cause);
	} finally {
		_releaseReply (_in);
	}
  } // connectionAddressCollect      
  public void connectionAlerting (int callId, String address, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("connectionAlerting", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   connectionAlerting (callId, address, cause);
	} finally {
		_releaseReply (_in);
	}
  } // connectionAlerting      
  public void connectionAuthorizeCallAttempt (int callId, String address, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("connectionAuthorizeCallAttempt", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   connectionAuthorizeCallAttempt (callId, address, cause);
	} finally {
		_releaseReply (_in);
	}
  } // connectionAuthorizeCallAttempt      
  public void connectionCallDelivery (int callId, String address, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("connectionCallDelivery", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   connectionCallDelivery (callId, address, cause);
	} finally {
		_releaseReply (_in);
	}
  } // connectionCallDelivery      
  public void connectionConnected (int callId, String address, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("connectionConnected", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   connectionConnected (callId, address, cause);
	} finally {
		_releaseReply (_in);
	}
  } // connectionConnected      
  public void connectionDisconnected (int callId, String address, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("connectionDisconnected", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   connectionDisconnected (callId, address, cause);
	} finally {
		_releaseReply (_in);
	}
  } // connectionDisconnected      
  public void connectionFailed (int callId, String address, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("connectionFailed", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   connectionFailed (callId, address, cause);
	} finally {
		_releaseReply (_in);
	}
  } // connectionFailed      
  public void connectionInProgress (int callId, String address, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("connectionInProgress", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   connectionInProgress (callId, address, cause);
	} finally {
		_releaseReply (_in);
	}
  } // connectionInProgress      
  public void connectionSuspended (int callId, String address, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("connectionSuspended", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   connectionSuspended (callId, address, cause);
	} finally {
		_releaseReply (_in);
	}
  } // connectionSuspended      
  public void mediaPlayPause (String terminal, int index, int offset, int trigger)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("mediaPlayPause", false);
	   _out.write_string (terminal);
	   _out.write_long (index);
	   _out.write_long (offset);
	   _out.write_long (trigger);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   mediaPlayPause (terminal, index, offset, trigger);
	} finally {
		_releaseReply (_in);
	}
  } // mediaPlayPause      
  public void mediaPlayResume (String terminal, int trigger)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("mediaPlayResume", false);
	   _out.write_string (terminal);
	   _out.write_long (trigger);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   mediaPlayResume (terminal, trigger);
	} finally {
		_releaseReply (_in);
	}
  } // mediaPlayResume      
  public void mediaRecorderPause (String terminal, int duration, int trigger)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("mediaRecorderPause", false);
	   _out.write_string (terminal);
	   _out.write_long (duration);
	   _out.write_long (trigger);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   mediaRecorderPause (terminal, duration, trigger);
	} finally {
		_releaseReply (_in);
	}
  } // mediaRecorderPause      
  public void mediaRecorderResume (String terminal, int trigger)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("mediaRecorderResume", false);
	   _out.write_string (terminal);
	   _out.write_long (trigger);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   mediaRecorderResume (terminal, trigger);
	} finally {
		_releaseReply (_in);
	}
  } // mediaRecorderResume      
  public void mediaSDDetected (String terminal, int[] sigs)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("mediaSDDetected", false);
	   _out.write_string (terminal);
	   net.sourceforge.gjtapi.raw.remote.corba.LongArrayHelper.write (_out, sigs);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   mediaSDDetected (terminal, sigs);
	} finally {
		_releaseReply (_in);
	}
  } // mediaSDDetected        
  public void mediaSDOverflow (String terminal, int[] sigs)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("mediaSDOverflow", false);
	   _out.write_string (terminal);
	   net.sourceforge.gjtapi.raw.remote.corba.LongArrayHelper.write (_out, sigs);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   mediaSDOverflow (terminal, sigs);
	} finally {
		_releaseReply (_in);
	}
  } // mediaSDOverflow        
  public void mediaSDPatternMatched (String terminal, int[] sigs, int index)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("mediaSDPatternMatched", false);
	   _out.write_string (terminal);
	   net.sourceforge.gjtapi.raw.remote.corba.LongArrayHelper.write (_out, sigs);
	   _out.write_long (index);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   mediaSDPatternMatched (terminal, sigs, index);
	} finally {
		_releaseReply (_in);
	}
  } // mediaSDPatternMatched        
  public void providerPrivateData (org.omg.CORBA.Any data, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("providerPrivateData", false);
	   _out.write_any (data);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   providerPrivateData (data, cause);
	} finally {
		_releaseReply (_in);
	}
  } // providerPrivateData      
  private void readObject (java.io.ObjectInputStream s)
  {
	 try 
	 {
	   String str = s.readUTF ();
	   org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init ().string_to_object (str);
	   org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
	   _set_delegate (delegate);
	 } catch (java.io.IOException e) {}
  }      
  public void terminalConnectionCreated (int callId, String address, String terminal, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("terminalConnectionCreated", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_string (terminal);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   terminalConnectionCreated (callId, address, terminal, cause);
	} finally {
		_releaseReply (_in);
	}
  } // terminalConnectionCreated      
  public void terminalConnectionDropped (int callId, String address, String terminal, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("terminalConnectionDropped", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_string (terminal);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   terminalConnectionDropped (callId, address, terminal, cause);
	} finally {
		_releaseReply (_in);
	}
  } // terminalConnectionDropped      
  public void terminalConnectionHeld (int callId, String address, String terminal, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("terminalConnectionHeld", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_string (terminal);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   terminalConnectionHeld (callId, address, terminal, cause);
	} finally {
		_releaseReply (_in);
	}
  } // terminalConnectionHeld      
  public void terminalConnectionRinging (int callId, String address, String terminal, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("terminalConnectionRinging", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_string (terminal);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   terminalConnectionRinging (callId, address, terminal, cause);
	} finally {
		_releaseReply (_in);
	}
  } // terminalConnectionRinging      
  public void terminalConnectionTalking (int callId, String address, String terminal, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("terminalConnectionTalking", false);
	   _out.write_long (callId);
	   _out.write_string (address);
	   _out.write_string (terminal);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   terminalConnectionTalking (callId, address, terminal, cause);
	} finally {
		_releaseReply (_in);
	}
  } // terminalConnectionTalking      
  public void terminalPrivateData (String terminal, org.omg.CORBA.Any data, int cause)
  {
	org.omg.CORBA.portable.InputStream _in = null;
	try {
	   org.omg.CORBA.portable.OutputStream _out = _request ("terminalPrivateData", false);
	   _out.write_string (terminal);
	   _out.write_any (data);
	   _out.write_long (cause);
	   _in = _invoke (_out);
	} catch (org.omg.CORBA.portable.ApplicationException _ex) {
	   _in = _ex.getInputStream ();
	   String _id = _ex.getId ();
	   throw new org.omg.CORBA.MARSHAL (_id);
	} catch (org.omg.CORBA.portable.RemarshalException _rm) {
	   terminalPrivateData (terminal, data, cause);
	} finally {
		_releaseReply (_in);
	}
  } // terminalPrivateData      
  private void writeObject (java.io.ObjectOutputStream s)
  {
	 try 
	 {
	   String str = org.omg.CORBA.ORB.init ().object_to_string (this);
	   s.writeUTF (str);
	 } catch (java.io.IOException e) {}
  }      
} // class _CorbaListenerStub
